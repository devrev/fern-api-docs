/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as DevrevApi from "../../..";
export declare namespace Parts {
    interface Options {
        environment?: core.Supplier<environments.DevrevApiEnvironment | string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * DevRev part interactions.
 */
export declare class Parts {
    protected readonly _options: Parts.Options;
    constructor(_options: Parts.Options);
    /**
     * Creates new [part](https://devrev.ai/docs/product/parts).
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    create(request: DevrevApi.PartsCreateRequest, requestOptions?: Parts.RequestOptions): Promise<DevrevApi.PartsCreateResponse>;
    /**
     * Deletes a [part](https://devrev.ai/docs/product/parts).
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     *
     * @example
     *     await devrevApi.parts.delete({
     *         id: "PROD-12345"
     *     })
     */
    delete(request: DevrevApi.PartsDeleteRequest, requestOptions?: Parts.RequestOptions): Promise<DevrevApi.PartsDeleteResponse>;
    /**
     * Gets a [part's](https://devrev.ai/docs/product/parts) information.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    get(request: DevrevApi.PartsGetQuery, requestOptions?: Parts.RequestOptions): Promise<DevrevApi.PartsGetResponse>;
    /**
     * Gets a [part's](https://devrev.ai/docs/product/parts) information.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    getPost(request: DevrevApi.PartsGetRequest, requestOptions?: Parts.RequestOptions): Promise<DevrevApi.PartsGetResponse>;
    /**
     * Lists a collection of [parts](https://devrev.ai/docs/product/parts).
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     *
     * @example
     *     await devrevApi.parts.list({})
     */
    list(request?: DevrevApi.PartsListQuery, requestOptions?: Parts.RequestOptions): Promise<DevrevApi.PartsListResponse>;
    /**
     * Lists a collection of [parts](https://devrev.ai/docs/product/parts).
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     *
     * @example
     *     await devrevApi.parts.listPost({})
     */
    listPost(request?: DevrevApi.PartsListRequest, requestOptions?: Parts.RequestOptions): Promise<DevrevApi.PartsListResponse>;
    /**
     * Updates a [part's](https://devrev.ai/docs/product/parts) information.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    update(request: DevrevApi.PartsUpdateRequest, requestOptions?: Parts.RequestOptions): Promise<DevrevApi.PartsUpdateResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
