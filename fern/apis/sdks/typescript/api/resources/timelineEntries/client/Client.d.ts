/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as DevrevApi from "../../..";
export declare namespace TimelineEntries {
    interface Options {
        environment?: core.Supplier<environments.DevrevApiEnvironment | string>;
        apiKey: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
/**
 * APIs to manage timeline entries for objects.
 */
export declare class TimelineEntries {
    protected readonly _options: TimelineEntries.Options;
    constructor(_options: TimelineEntries.Options);
    /**
     * Creates a new entry on an object's timeline.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    create(request: DevrevApi.TimelineEntriesCreateRequest, requestOptions?: TimelineEntries.RequestOptions): Promise<DevrevApi.TimelineEntriesCreateResponse>;
    /**
     * Deletes an entry from an object's timeline.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     *
     * @example
     *     await devrevApi.timelineEntries.delete({
     *         id: "don:core:<partition>:devo/<dev-org-id>:ticket/123:timeline_event/<timeline-event-id>"
     *     })
     */
    delete(request: DevrevApi.TimelineEntriesDeleteRequest, requestOptions?: TimelineEntries.RequestOptions): Promise<DevrevApi.TimelineEntriesDeleteResponse>;
    /**
     * Gets an entry on an object's timeline.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    get(request: DevrevApi.TimelineEntriesGetQuery, requestOptions?: TimelineEntries.RequestOptions): Promise<DevrevApi.TimelineEntriesGetResponse>;
    /**
     * Gets an entry on an object's timeline.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    getPost(request: DevrevApi.TimelineEntriesGetRequest, requestOptions?: TimelineEntries.RequestOptions): Promise<DevrevApi.TimelineEntriesGetResponse>;
    /**
     * Lists the timeline entries for an object.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     *
     * @example
     *     await devrevApi.timelineEntries.list({
     *         object: "PROD-12345"
     *     })
     */
    list(request: DevrevApi.TimelineEntriesListQuery, requestOptions?: TimelineEntries.RequestOptions): Promise<DevrevApi.TimelineEntriesListResponse>;
    /**
     * Lists the timeline entries for an object.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.NotFoundError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     *
     * @example
     *     await devrevApi.timelineEntries.listPost({
     *         object: "PROD-12345"
     *     })
     */
    listPost(request: DevrevApi.TimelineEntriesListRequest, requestOptions?: TimelineEntries.RequestOptions): Promise<DevrevApi.TimelineEntriesListResponse>;
    /**
     * Updates an entry on an object's timeline.
     * @throws {@link DevrevApi.BadRequestError}
     * @throws {@link DevrevApi.UnauthorizedError}
     * @throws {@link DevrevApi.ForbiddenError}
     * @throws {@link DevrevApi.TooManyRequestsError}
     * @throws {@link DevrevApi.InternalServerError}
     * @throws {@link DevrevApi.ServiceUnavailableError}
     */
    update(request: DevrevApi.TimelineEntriesUpdateRequest, requestOptions?: TimelineEntries.RequestOptions): Promise<DevrevApi.TimelineEntriesUpdateResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
