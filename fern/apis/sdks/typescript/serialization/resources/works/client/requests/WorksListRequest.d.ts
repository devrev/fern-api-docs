/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../..";
import * as DevrevApi from "../../../../../api";
import * as core from "../../../../../core";
export declare const WorksListRequest: core.serialization.Schema<serializers.WorksListRequest.Raw, DevrevApi.WorksListRequest>;
export declare namespace WorksListRequest {
    interface Raw {
        actual_close_date?: serializers.DateFilter.Raw | null;
        applies_to_part?: string[] | null;
        created_by?: string[] | null;
        created_date?: serializers.DateFilter.Raw | null;
        cursor?: string | null;
        issue?: serializers.WorksFilterIssue.Raw | null;
        limit?: number | null;
        mode?: serializers.ListMode.Raw | null;
        modified_date?: serializers.DateFilter.Raw | null;
        owned_by?: string[] | null;
        reported_by?: string[] | null;
        stage?: serializers.StageFilter.Raw | null;
        staged_info?: serializers.StagedInfoFilter.Raw | null;
        sync_metadata?: serializers.SyncMetadataFilter.Raw | null;
        tags?: string[] | null;
        target_close_date?: serializers.DateFilter.Raw | null;
        ticket?: serializers.WorksFilterTicket.Raw | null;
        type?: serializers.WorkType.Raw[] | null;
    }
}
