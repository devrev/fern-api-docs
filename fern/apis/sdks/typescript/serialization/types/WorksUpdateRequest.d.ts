/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../core";
import * as serializers from "..";
import * as DevrevApi from "../../api";
export declare const WorksUpdateRequest: core.serialization.Schema<serializers.WorksUpdateRequest.Raw, DevrevApi.WorksUpdateRequest>;
export declare namespace WorksUpdateRequest {
    type Raw = WorksUpdateRequest.Issue | WorksUpdateRequest.None | WorksUpdateRequest.Ticket;
    interface Issue extends _Base, serializers.WorksUpdateRequestIssue.Raw {
        type: "issue";
    }
    interface None extends _Base {
        type: "none";
        value: serializers.Empty.Raw;
    }
    interface Ticket extends _Base, serializers.WorksUpdateRequestTicket.Raw {
        type: "ticket";
    }
    interface _Base {
        applies_to_part?: string | null;
        artifacts?: serializers.WorksUpdateRequestArtifacts.Raw | null;
        body?: string | null;
        id: string;
        owned_by?: serializers.WorksUpdateRequestOwnedBy.Raw | null;
        reported_by?: serializers.WorksUpdateRequestReportedBy.Raw | null;
        stage?: serializers.StageUpdate.Raw | null;
        staged_info?: serializers.WorksUpdateRequestStagedInfoStagedInfoUpdate.Raw | null;
        tags?: serializers.WorksUpdateRequestTags.Raw | null;
        target_close_date?: string | null;
        title?: string | null;
    }
}
