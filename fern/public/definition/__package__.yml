# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  DevOrgAuthConnectionsCreateRequest:
    base-properties: {}
    docs: |
      Request to create a new enterprise authentication connection.
    union:
      google_apps:
        type: AuthConnectionOptionsGoogleApps
      oidc:
        type: AuthConnectionOptionsOidc
      samlp:
        type: AuthConnectionOptionsSaml
      waad:
        type: AuthConnectionOptionsAzureAd

  DevOrgAuthConnectionsUpdateRequest:
    base-properties: {}
    docs: |
      Request to update an enterprise authentication connection for a Dev
      organization.
    union:
      google_apps:
        type: AuthConnectionOptionsGoogleApps
      none:
        type: empty
      oidc:
        type: AuthConnectionOptionsOidc
      samlp:
        type: AuthConnectionOptionsSaml
      waad:
        type: AuthConnectionOptionsAzureAd

  PartsCreateRequest:
    base-properties: {}
    union:
      capability:
        type: PartsCreateRequestCapability
      enhancement:
        type: PartsCreateRequestEnhancement
      feature:
        type: PartsCreateRequestFeature
      product:
        type: parts-create-request-product

  PartsUpdateRequest:
    base-properties: {}
    union:
      capability:
        type: parts-update-request-capability
      enhancement:
        type: PartsUpdateRequestEnhancement
      feature:
        type: parts-update-request-feature
      none:
        type: empty
      product:
        type: parts-update-request-product

  TimelineEntriesCreateRequest:
    base-properties: {}
    docs: The request to create a timeline entry for an object.
    union:
      timeline_comment:
        type: TimelineEntriesCreateRequestTimelineComment

  TimelineEntriesUpdateRequest:
    base-properties: {}
    docs: The request to update a timeline entry.
    union:
      timeline_comment:
        type: TimelineEntriesUpdateRequestTimelineComment

  WorksCreateRequest:
    base-properties: {}
    union:
      issue:
        type: WorksCreateRequestIssue
      ticket:
        type: WorksCreateRequestTicket

  WorksUpdateRequest:
    base-properties: {}
    union:
      issue:
        type: WorksUpdateRequestIssue
      none:
        type: empty
      ticket:
        type: WorksUpdateRequestTicket

  ArtifactSummary:
    type: AtomBaseSummary

  ArtifactsLocateResponse:
    docs: The response to getting an artifact's download URL.
    properties:
      expires_at:
        docs: The expiration timestamp of the URL.
        type: optional<string>
      url:
        type: string
        docs: The artifact's download URL.

  ArtifactsPrepareResponse:
    docs: The response to preparing a URL to upload a file.
    properties:
      form_data:
        docs: The POST policy form data.
        type: list<ArtifactsPrepareResponseFormData>
      id:
        type: string
        docs: The generated artifact's ID.
      url:
        type: string
        docs: The URL that the file's data should be uploaded to.

  ArtifactsPrepareResponseFormData:
    properties:
      key:
        type: string
        docs: Key of the form field.
      value:
        type: string
        docs: Value corresponding to the key.

  AtomBase:
    properties:
      created_by:
        type: optional<UserSummary>
      created_date:
        docs: Timestamp when the object was created.
        type: optional<string>
      display_id:
        docs: Human-readable object ID unique to the Dev organization.
        type: optional<string>
      id:
        type: string
        docs: Globally unique object ID.
      modified_by:
        type: optional<UserSummary>
      modified_date:
        docs: Timestamp when the object was last modified.
        type: optional<string>

  AtomBaseSummary:
    properties:
      display_id:
        docs: Human-readable object ID unique to the Dev organization.
        type: optional<string>
      id:
        type: string
        docs: Globally unique object ID.

  AuthConnection:
    base-properties: {}
    docs: |
      Connection object that specifies the configuration for an
      authentication connection that is set up for a Dev organization.
    union:
      google_apps:
        type: AuthConnectionOptionsGoogleApps
      oidc:
        type: AuthConnectionOptionsOidc
      samlp:
        type: AuthConnectionOptionsSaml
      social:
        type: auth-connection-options-social
      waad:
        type: AuthConnectionOptionsAzureAd

  AuthConnectionOptionsAzureAd:
    docs: |
      Object encapsulating the configuration parameters for an Azure AD
      authentication connection.
    properties:
      client_id:
        docs: Client ID for the Azure authentication connection.
        type: optional<string>
      client_secret:
        docs: Client secret for the Azure authentication connection.
        type: optional<string>
      domain:
        docs: Domain URL of the Azure authentication connection.
        type: optional<string>

  AuthConnectionOptionsGoogleApps:
    docs: |
      Object encapsulating the configuration parameters for a Google Apps
      authentication connection.
    properties:
      client_id:
        docs: Client ID for the Google Apps authentication connection.
        type: optional<string>
      client_secret:
        docs: |
          Client secret for the Google Apps authentication connection.
        type: optional<string>
      tenant_domain:
        docs: |
          Tenant domain URL of the Google Apps authentication connection.
        type: optional<string>

  AuthConnectionOptionsOidc:
    docs: |
      Object encapsulating the configuration parameters for an OIDC
      authentication connection.
    properties:
      client_id:
        docs: Client ID for the OIDC authentication connection.
        type: optional<string>
      client_secret:
        docs: Client secret for the OIDC authentication connection.
        type: optional<string>
      issuer:
        docs: Issuer URL of the OIDC authentication connection.
        type: optional<string>

  AuthConnectionOptionsSaml:
    docs: |
      Object encapsulating the configuration parameters for a SAML
      authentication connection.
    properties:
      sign_in_endpoint:
        docs: Sign In endpoint for the SAML authentication connection.
        type: optional<string>
      signing_cert:
        docs: |
          Signing certificate for the SAML authentication connection.
        type: optional<string>

  auth-connection-options-social:
    type: map<string, unknown>

  AuthConnectionToggle:
    enum:
      - name: disable
        value: disable
      - name: enable
        value: enable

  AuthConnectionType:
    docs: |
      Defines the type for the authentication connection. The configuration
      for each authentication connection will depend on the type value.
    enum:
      - name: google_apps
        value: google_apps
      - name: oidc
        value: oidc
      - name: samlp
        value: samlp
      - name: social
        value: social
      - name: waad
        value: waad

  AuthToken:
    properties:
      client_id:
        docs: |
          An identifier that represents the application that requested the
          token. Only applicable for application access tokens.
        type: optional<string>
      expires_at:
        docs: The time at which the token expires.
        type: optional<string>
      issued_at:
        docs: The time at which the token was issued.
        type: optional<string>
      requested_token_type:
        type: optional<AuthTokenRequestedTokenType>
      scopes:
        docs: The scopes associated with the issued token.
        type: optional<list<string>>
      status:
        type: optional<AuthTokenStatus>
      subject:
        docs: The subject of the token.
        type: optional<string>
      token_hint:
        docs: A hint that identifies the token.
        type: optional<string>

  AuthTokenGrantType:
    docs: Specifies the process of obtaining a token.
    enum:
      - name: UrnDevrevParamsOauthGrantTypeTokenIssue
        value: urn:devrev:params:oauth:grant-type:token-issue
      - name: UrnIetfParamsOauthGrantTypeTokenExchange
        value: urn:ietf:params:oauth:grant-type:token-exchange

  AuthTokenRequestedTokenType:
    docs: The type of the requested token.
    enum:
      - name: UrnDevrevParamsOauthTokenTypeAat
        value: urn:devrev:params:oauth:token-type:aat
      - name: UrnDevrevParamsOauthTokenTypeAatPublic
        value: urn:devrev:params:oauth:token-type:aat:public
      - name: UrnDevrevParamsOauthTokenTypeDev
        value: urn:devrev:params:oauth:token-type:dev
      - name: UrnDevrevParamsOauthTokenTypePat
        value: urn:devrev:params:oauth:token-type:pat
      - name: UrnDevrevParamsOauthTokenTypeRev
        value: urn:devrev:params:oauth:token-type:rev
      - name: UrnDevrevParamsOauthTokenTypeSession
        value: urn:devrev:params:oauth:token-type:session
      - name: UrnDevrevParamsOauthTokenTypeSessionDev0
        value: urn:devrev:params:oauth:token-type:session:dev0
      - name: UrnDevrevParamsOauthTokenTypeSys
        value: urn:devrev:params:oauth:token-type:sys
      - name: UrnIetfParamsOauthTokenTypeJwt
        value: urn:ietf:params:oauth:token-type:jwt

  AuthTokenStatus:
    docs: The status of the token.
    enum:
      - name: active
        value: active
      - name: expired
        value: expired
      - name: revoked
        value: revoked

  AuthTokenSubjectTokenType:
    docs: The type of the subject token.
    enum:
      - name: UrnDevrevParamsOauthTokenTypeJwtAuth0
        value: urn:devrev:params:oauth:token-type:jwt:auth0
      - name: UrnDevrevParamsOauthTokenTypeJwtDev
        value: urn:devrev:params:oauth:token-type:jwt:dev
      - name: UrnDevrevParamsOauthTokenTypeRevinfo
        value: urn:devrev:params:oauth:token-type:revinfo
      - name: UrnDevrevParamsOauthTokenTypeSysu
        value: urn:devrev:params:oauth:token-type:sysu
      - name: UrnDevrevParamsOauthTokenTypeUserinfo
        value: urn:devrev:params:oauth:token-type:userinfo
      - name: UrnDevrevParamsOauthTokenTypeUserinfoProfile
        value: urn:devrev:params:oauth:token-type:userinfo:profile
      - name: UrnIetfParamsOauthTokenTypeJwt
        value: urn:ietf:params:oauth:token-type:jwt

  AuthTokenTokenType:
    docs: |
      The type of the issued token. Bearer is the only supported token type.
    enum:
      - name: bearer
        value: bearer

  AuthTokensCreateResponse:
    docs: |
      Response for the request to create a new token corresponding to the
      requested token type.
    properties:
      access_token:
        type: string
        docs: |
          The issued JSON Web Token (JWT) corresponding to the requested
          token type.
      client_id:
        docs: |
          An identifier that represents the application which is requesting
          the token. Only present in a response corresponding to an
          application access token (AAT).
        type: optional<string>
      expires_in:
        type: integer
        docs: |
          The validity lifetime of the token specified in seconds since Unix
          epoch.
      refresh_token:
        docs: A token to refresh the issued token.
        type: optional<string>
      scope:
        docs: |
          The scopes associated with the issued token. A space-delimited list
          of values in which the order of values does not matter.
        type: optional<string>
      token_type:
        type: AuthTokenTokenType

  AuthTokensGetResponse:
    docs: The response to get the token metadata.
    properties:
      token:
        type: AuthToken

  AuthTokensListResponse:
    docs: The response to list the token metadata.
    properties:
      tokens:
        docs: The list of token metadata.
        type: list<AuthToken>

  AuthTokensOrgTraits:
    docs: Carries Rev org info.
    properties:
      display_name:
        docs: The display name of the Rev org.
        type: optional<string>
      domain:
        docs: The domain of the Rev org.
        type: optional<string>

  AuthTokensRevInfo:
    docs: |
      Carries info corresponding to the Rev user to be provisioned and/or
      issue a Rev session token.
    properties:
      org_ref:
        docs: An identifier which uniquely identifies a Rev org.
        type: optional<string>
      org_traits:
        type: optional<AuthTokensOrgTraits>
      rev_user_id:
        docs: The unique ID of the Rev user.
        type: optional<string>
      user_ref:
        type: string
        docs: An identifier which uniquely identifies a Rev user.
      user_traits:
        type: optional<AuthTokensUserTraits>

  AuthTokensUpdateResponse:
    docs: Response for the request to update the token metadata.
    properties:
      token:
        type: AuthToken

  AuthTokensUserTraits:
    docs: Carries Rev user info.
    properties:
      display_name:
        docs: The display name of the Rev user.
        type: optional<string>
      email:
        docs: The email address of the Rev user.
        type: optional<string>
      full_name:
        docs: The full name of the Rev user.
        type: optional<string>

  Capability:
    type: PartBase

  CapabilitySummary:
    type: PartBaseSummary

  DevOrgAuthConnectionsCreateRequestType:
    docs: |
      Defines the type for the authentication connection. Different types of
      authentication connections have different configuration parameters.
    enum:
      - name: google_apps
        value: google_apps
      - name: oidc
        value: oidc
      - name: samlp
        value: samlp
      - name: waad
        value: waad

  DevOrgAuthConnectionsCreateResponse:
    docs: |
      Response for the request to create a new enterprise authentication
      connection.
    properties:
      auth_connection:
        type: AuthConnection

  DevOrgAuthConnectionsGetResponse:
    docs: |
      Response object encapsulating the configuration details of an
      authentication connection.
    properties:
      auth_connection:
        type: AuthConnection

  DevOrgAuthConnectionsListResponse:
    docs: |
      Response object for the request to list all the social and enterprise
      authentication connections configured for a Dev organization.
    properties:
      auth_connections:
        docs: |
          List of all the authentication connections currently configured for
          a Dev organization.
        type: list<AuthConnection>

  DevOrgAuthConnectionsUpdateRequestType:
    docs: |
      Specifies the type for the authentication connection. Different types
      of authentication connections have different configuration parameters
      that can be updated.
    enum:
      - name: google_apps
        value: google_apps
      - name: none
        value: none
      - name: oidc
        value: oidc
      - name: samlp
        value: samlp
      - name: waad
        value: waad

  DevOrgAuthConnectionsUpdateResponse:
    docs: |
      Response for the request to update an enterprise authentication
      connection.
    properties:
      auth_connection:
        type: AuthConnection

  DevUser:
    properties:
      external_identities:
        docs: IDs of the Dev User outside the DevRev SOR.
        type: optional<list<external-identity>>

  DevUserSummary:
    type: UserBaseSummary

  DevUsersListResponse:
    docs: The response to listing the Dev users.
    properties:
      dev_users:
        docs: The list of Dev users.
        type: list<DevUser>
      next_cursor:
        docs: |
          The cursor used to iterate subsequent results in accordance to the
          sort order. If not set, then no later elements exist.
        type: optional<string>
      prev_cursor:
        docs: |
          The cursor used to iterate preceding results in accordance to the
          sort order. If not set, then no prior elements exist.
        type: optional<string>

  DevUsersSelfResponse:
    docs: |
      The response to getting the information for the authenticated user.
    properties:
      dev_user:
        type: DevUser

  empty:
    type: map<string, unknown>

  Enhancement:
    properties:
      target_close_date:
        docs: Timestamp when the enhancement is expected to be closed.
        type: optional<string>

  EnhancementSummary:
    type: PartBaseSummary

  ErrorBadRequest:
    properties:
      type:
        type: optional<ErrorBadRequestType>

  error-bad-request-bad-request:
    type: map<string, unknown>

  ErrorBadRequestInvalidEnumValue:
    properties:
      allowed_values:
        docs: The allowed values for the field.
        type: list<string>
      field_name:
        type: string
        docs: The field whose enum value is invalid.
      value:
        type: string
        docs: The value that was received.

  ErrorBadRequestMissingRequiredField:
    properties:
      field_name:
        type: string
        docs: The missing field's name.

  error-bad-request-parse-error:
    type: map<string, unknown>

  ErrorBadRequestType:
    enum:
      - name: bad_request
        value: bad_request
      - name: invalid_enum_value
        value: invalid_enum_value
      - name: missing_required_field
        value: missing_required_field
      - name: parse_error
        value: parse_error
      - name: value_not_permitted
        value: value_not_permitted

  ErrorBadRequestValueNotPermitted:
    properties:
      field_name:
        type: string
        docs: The field whose value is not permitted.
      reason:
        docs: The reason the value isn't permitted.
        type: optional<string>

  ErrorBase:
    properties:
      message:
        docs: The message associated with the error.
        type: optional<string>

  ErrorForbidden:
    properties:
      type:
        type: optional<ErrorForbiddenType>

  error-forbidden-forbidden:
    type: map<string, unknown>

  ErrorForbiddenType:
    enum:
      - name: forbidden
        value: forbidden

  ErrorInternalServerError:
    properties:
      reference_id:
        docs: |
          A unique ID that's generated for the error that can be used for
          inquiry.
        type: optional<string>
      type:
        type: optional<ErrorInternalServerErrorType>

  error-internal-server-error-internal-error:
    type: map<string, unknown>

  ErrorInternalServerErrorType:
    enum:
      - name: internal_error
        value: internal_error

  ErrorNotFound:
    properties:
      type:
        type: optional<ErrorNotFoundType>

  error-not-found-not-found:
    type: map<string, unknown>

  ErrorNotFoundType:
    enum:
      - name: not_found
        value: not_found

  ErrorServiceUnavailable:
    properties:
      type:
        type: optional<ErrorServiceUnavailableType>

  error-service-unavailable-service-unavailable:
    type: map<string, unknown>

  ErrorServiceUnavailableType:
    enum:
      - name: service_unavailable
        value: service_unavailable

  ErrorTooManyRequests:
    properties:
      retry_after:
        docs: |
          The number of seconds after which the client should retry.
        type: optional<integer>
      type:
        type: optional<ErrorTooManyRequestsType>

  error-too-many-requests-too-many-requests:
    type: map<string, unknown>

  ErrorTooManyRequestsType:
    enum:
      - name: too_many_requests
        value: too_many_requests

  ErrorUnauthorized:
    properties:
      type:
        type: optional<ErrorUnauthorizedType>

  ErrorUnauthorizedType:
    enum:
      - name: unauthenticated
        value: unauthenticated

  error-unauthorized-unauthenticated:
    type: map<string, unknown>

  EventPartCreated:
    properties:
      part:
        type: Part

  EventPartDeleted:
    properties:
      id:
        type: string
        docs: The ID of the part that was deleted.

  EventPartUpdated:
    properties:
      part:
        type: Part

  EventRevOrgCreated:
    properties:
      rev_org:
        type: RevOrg

  EventRevOrgDeleted:
    properties:
      id:
        type: string
        docs: The ID of the Rev organization that was deleted.

  EventRevOrgUpdated:
    properties:
      rev_org:
        type: RevOrg

  EventTagCreated:
    properties:
      tag:
        type: Tag

  EventTagDeleted:
    properties:
      id:
        type: string
        docs: The ID of the tag that was deleted.

  EventTagUpdated:
    properties:
      tag:
        type: Tag

  EventTimelineEntryCreated:
    properties:
      entry:
        type: TimelineEntry

  EventTimelineEntryDeleted:
    properties:
      id:
        type: string
        docs: The ID of the timeline entry that was deleted.

  EventTimelineEntryUpdated:
    properties:
      entry:
        type: TimelineEntry

  EventWebhookCreated:
    properties:
      webhook:
        type: Webhook

  EventWebhookDeleted:
    properties:
      id:
        type: string
        docs: The ID of the webhook that was deleted.

  EventWebhookUpdated:
    properties:
      webhook:
        type: Webhook

  EventWorkCreated:
    properties:
      work:
        type: Work

  EventWorkDeleted:
    properties:
      id:
        type: string
        docs: The ID of the work that was deleted.

  EventWorkUpdated:
    properties:
      work:
        type: Work

  external-identity:
    docs: External identity of a user.
    type: map<string, unknown>

  Feature:
    type: PartBase

  FeatureSummary:
    type: PartBaseSummary

  GroupSummary:
    type: AtomBaseSummary

  Issue:
    properties:
      priority:
        type: optional<IssuePriority>

  IssuePriority:
    docs: Priority of the work based upon impact and criticality.
    enum:
      - name: p0
        value: p0
      - name: p1
        value: p1
      - name: p2
        value: p2
      - name: p3
        value: p3

  ListMode:
    docs: |
      The iteration mode to use. If "after", then entries after the provided
      cursor will be returned, or if no cursor is provided, then from the
      beginning. If "before", then entries before the provided cursor will be
      returned, or if no cursor is provided, then from the end. Entries will
      always be returned in the specified sort-by order.
    enum:
      - name: after
        value: after
      - name: before
        value: before

  OrgBase:
    properties:
      display_name:
        docs: Name of the Organization.
        type: optional<string>

  OrgBaseSummary:
    properties:
      display_name:
        docs: Name of the Organization.
        type: optional<string>

  OrgEnvironment:
    docs: |
      The environment of the Org. Defaults to 'production' if not specified.
    enum:
      - name: production
        value: production
      - name: staging
        value: staging
      - name: test
        value: test

  OrgSummary:
    base-properties: {}
    union:
      rev_org:
        type: RevOrgSummary

  OrgType:
    enum:
      - name: rev_org
        value: rev_org

  Part:
    base-properties: {}
    union:
      capability:
        type: Capability
      enhancement:
        type: Enhancement
      feature:
        type: Feature
      product:
        type: Product

  PartBase:
    properties:
      artifacts:
        docs: The attached artifacts.
        type: optional<list<ArtifactSummary>>
      description:
        docs: Description of the part.
        type: optional<string>
      name:
        docs: Name of the part.
        type: optional<string>
      owned_by:
        docs: The users that own the part.
        type: optional<list<UserSummary>>
      tags:
        docs: Tags associated with the object.
        type: optional<list<TagWithValue>>

  PartBaseSummary:
    properties:
      name:
        docs: Name of the part.
        type: optional<string>

  PartSummary:
    base-properties: {}
    union:
      capability:
        type: CapabilitySummary
      enhancement:
        type: EnhancementSummary
      feature:
        type: FeatureSummary
      product:
        type: ProductSummary

  PartType:
    enum:
      - name: capability
        value: capability
      - name: enhancement
        value: enhancement
      - name: feature
        value: feature
      - name: product
        value: product

  PartsCreateRequestCapability:
    properties:
      parent_part:
        docs: ID of the parent product for the capability.
        type: list<string>

  PartsCreateRequestEnhancement:
    properties:
      parent_part:
        docs: |
          ID of the parent part on which the enhancement is to be created.
        type: list<string>
      target_close_date:
        docs: |
          Target close date by which enhancement is expected to be closed.
        type: optional<string>

  PartsCreateRequestFeature:
    properties:
      parent_part:
        docs: ID of the parent capability/feature for the feature.
        type: list<string>

  parts-create-request-product:
    type: map<string, unknown>

  PartsCreateResponse:
    properties:
      part:
        type: Part

  parts-delete-response:
    type: map<string, unknown>

  PartsGetResponse:
    properties:
      part:
        type: Part

  PartsListResponse:
    properties:
      next_cursor:
        docs: |
          The cursor used to iterate subsequent results in accordance to the
          sort order. If not set, then no later elements exist.
        type: optional<string>
      parts:
        docs: The list of parts.
        type: list<Part>
      prev_cursor:
        docs: |
          The cursor used to iterate preceding results in accordance to the
          sort order. If not set, then no prior elements exist.
        type: optional<string>

  parts-update-request-capability:
    type: map<string, unknown>

  PartsUpdateRequestEnhancement:
    properties:
      target_close_date:
        docs: Updates the target close date of the enhancement.
        type: optional<string>

  parts-update-request-feature:
    type: map<string, unknown>

  PartsUpdateRequestOwnedBy:
    properties:
      set:
        docs: |
          Sets the owner IDs to the provided user IDs. This must not be
          empty.
        type: optional<list<string>>

  parts-update-request-product:
    type: map<string, unknown>

  PartsUpdateResponse:
    properties:
      part:
        type: Part

  Product:
    type: PartBase

  ProductSummary:
    type: PartBaseSummary

  RevOrg:
    properties:
      description:
        docs: Description of the Rev organization.
        type: optional<string>
      domain:
        docs: Company's domain name. Example - 'devrev.ai'.
        type: optional<string>
      external_ref:
        docs: |
          External ref is a unique identifier for the Rev (customer)
          organization from your primary customer system of records. If none
          is specified, a system-generated identifier will be assigned to the
          organization.
        type: optional<string>

  RevOrgSummary:
    type: OrgBaseSummary

  RevOrgsCreateResponse:
    docs: |
      Response object for request to create a new Rev organization.
    properties:
      rev_org:
        type: RevOrg

  rev-orgs-delete-response:
    docs: The response to deleting a Rev organization.
    type: map<string, unknown>

  RevOrgsGetResponse:
    docs: The response to getting a Rev organization's information.
    properties:
      rev_org:
        type: RevOrg

  RevOrgsListResponse:
    docs: |
      The response to getting a list of Rev organizations' information.
    properties:
      next_cursor:
        docs: |
          The cursor used to iterate subsequent results in accordance to the
          sort order. If not set, then no later elements exist.
        type: optional<string>
      prev_cursor:
        docs: |
          The cursor used to iterate preceding results in accordance to the
          sort order. If not set, then no prior elements exist.
        type: optional<string>
      rev_orgs:
        docs: List with all of the Rev organizations' information.
        type: list<RevOrg>

  RevOrgsUpdateResponse:
    docs: Response object to updating Rev organization's information.
    properties:
      rev_org:
        type: RevOrg

  RevUserSummary:
    properties:
      external_ref:
        docs: |
          External ref is a mutable unique identifier for a user within the
          Rev organization from your primary customer record. If none is
          available, a good alternative is the email address/phone number
          which could uniquely identify the user. If none is specified, a
          system-generated identifier will be assigned to the user.
        type: optional<string>
      rev_org:
        type: optional<OrgSummary>

  SetTagWithValue:
    properties:
      id:
        type: string
        docs: The ID of the tag.
      value:
        docs: |
          The value for the object's association with the tag. If specified,
          the value must be one that's specified in the tag's allowed values.
        type: optional<string>

  Stage:
    docs: Describes the current stage of a work item.
    properties:
      name:
        type: string
        docs: Current stage name of the work item.

  StageInit:
    docs: Sets an object's initial stage.
    properties:
      name:
        docs: The name of the stage.
        type: optional<string>

  StageUpdate:
    docs: Updates an object's stage.
    properties:
      name:
        docs: |
          The updated name of the stage, otherwise unchanged if not set.
        type: optional<string>

  SysUserSummary:
    type: UserBaseSummary

  Tag:
    properties:
      allowed_values:
        docs: |
          The allowed values for the tag, where a value is provided when a
          tag is associated with an object. If empty, then no value should be
          provided when the association is made.
        type: optional<list<string>>
      description:
        docs: |
          An informative description for the tag that should provide context
          on the tag's purpose and usage.
        type: optional<string>
      name:
        docs: |
          The name of the tag, which denotes the logical concept by which all
          tagged objects will be associated. The name is guaranteed to be
          unique.
        type: optional<string>

  TagSummary:
    properties:
      name:
        docs: |
          The name of the tag, which denotes the logical concept by which all
          tagged objects will be associated. The name is guaranteed to be
          unique.
        type: optional<string>

  TagWithValue:
    properties:
      tag:
        type: TagSummary
      value:
        docs: The value for the object's association with the tag.
        type: optional<string>

  TagsCreateResponse:
    docs: The response to creating a new tag.
    properties:
      tag:
        type: Tag

  tags-delete-response:
    docs: The response for deleting a tag.
    type: map<string, unknown>

  TagsGetResponse:
    docs: The response to getting a tag's information.
    properties:
      tag:
        type: Tag

  TagsListResponse:
    docs: The response to listing the tags.
    properties:
      next_cursor:
        docs: |
          The cursor used to iterate subsequent results in accordance to the
          sort order. If not set, then no later elements exist.
        type: optional<string>
      prev_cursor:
        docs: |
          The cursor used to iterate preceding results in accordance to the
          sort order. If not set, then no prior elements exist.
        type: optional<string>
      tags:
        docs: The list of tags.
        type: list<Tag>

  TagsUpdateAllowedValues:
    docs: Specifies an update to a tag's allowed values.
    properties:
      set:
        docs: Sets the allowed values for the tag.
        type: optional<list<string>>

  TagsUpdateResponse:
    docs: The response for updating a tag.
    properties:
      tag:
        type: Tag

  Ticket:
    properties:
      group:
        type: optional<GroupSummary>
      rev_org:
        type: optional<OrgSummary>
      severity:
        type: optional<TicketSeverity>

  TicketSeverity:
    docs: Severity of the ticket.
    enum:
      - name: blocker
        value: blocker
      - name: high
        value: high
      - name: low
        value: low
      - name: medium
        value: medium

  TimelineComment:
    properties:
      artifacts:
        docs: The artifacts for the comment.
        type: optional<list<ArtifactSummary>>
      body:
        docs: |
          The comment's body. If the comment has been deleted, then no body
          will appear in the response.
        type: optional<string>
      body_type:
        type: optional<TimelineCommentBodyType>
      snap_kit_body:
        docs: The SnapKit Body of the comment.
        type: optional<map<string, unknown>>

  TimelineCommentBodyType:
    docs: The type of the body to use for the comment.
    enum:
      - name: snap_kit
        value: snap_kit
      - name: text
        value: text

  TimelineEntriesCreateRequestTimelineComment:
    properties:
      artifacts:
        docs: The IDs of the artifacts attached to the comment.
        type: optional<list<string>>
      body:
        docs: The comment's body.
        type: optional<string>
      body_type:
        type: optional<TimelineCommentBodyType>
      snap_kit_body:
        docs: The SnapKit body of the comment.
        type: optional<map<string, unknown>>

  TimelineEntriesCreateRequestType:
    enum:
      - name: timeline_comment
        value: timeline_comment

  TimelineEntriesCreateResponse:
    docs: The response to creating a timeline entry for an object.
    properties:
      timeline_entry:
        type: TimelineEntry

  TimelineEntriesGetResponse:
    docs: The request to getting a timeline entry.
    properties:
      timeline_entry:
        type: TimelineEntry

  TimelineEntriesListResponse:
    docs: The response to listing timeline entries for an object.
    properties:
      next_cursor:
        docs: |
          The cursor used to iterate subsequent results in accordance to the
          sort order. If not set, then no later elements exist.
        type: optional<string>
      prev_cursor:
        docs: |
          The cursor used to iterate preceding results in accordance to the
          sort order. If not set, then no prior elements exist.
        type: optional<string>
      timeline_entries:
        docs: The timeline entries for the object.
        type: list<TimelineEntry>

  TimelineEntriesUpdateRequestTimelineComment:
    properties:
      artifacts:
        type: optional<TimelineEntriesUpdateRequestTimelineCommentArtifacts>
      body:
        docs: The updated comment's body.
        type: optional<string>
      body_type:
        type: optional<TimelineCommentBodyType>
      snap_kit_body:
        docs: The SnapKit body of the comment.
        type: optional<map<string, unknown>>

  TimelineEntriesUpdateRequestTimelineCommentArtifacts:
    properties:
      add:
        docs: |
          Adds the provided artifacts to the comment. An artifact cannot be
          added more than once, i.e. nothing is done if the artifact is
          already attached. Mutually exclusive with `set`.
        type: optional<list<string>>
      remove:
        docs: |
          Removes the provided artifacts from the comment. If an artifact is
          not present, then it's ignored. Mututally exclusive with `set`.
        type: optional<list<string>>
      set:
        docs: Sets the field to the provided artifacts.
        type: optional<list<string>>

  TimelineEntriesUpdateRequestType:
    enum:
      - name: timeline_comment
        value: timeline_comment

  TimelineEntriesUpdateResponse:
    docs: The response to updating a timeline entry.
    properties:
      timeline_entry:
        type: TimelineEntry

  TimelineEntry:
    base-properties: {}
    union:
      timeline_comment:
        type: TimelineComment

  TimelineEntryBase:
    type: AtomBase

  TimelineEntryType:
    enum:
      - name: timeline_comment
        value: timeline_comment

  TimelineEntryVisibility:
    docs: |
      The visibility of the entry. If 'private', then the entry is only
      visible to the creator, otherwise if not set, then the entry has
      default visibility.
    enum:
      - name: private
        value: private

  UserBase:
    properties:
      display_name:
        docs: |
          The user's display name. The name is non-unique and mutable.
        type: optional<string>
      display_picture:
        type: optional<ArtifactSummary>
      email:
        docs: Email address of the user.
        type: optional<string>
      full_name:
        docs: Full name of the user.
        type: optional<string>
      phone_numbers:
        docs: Phone numbers of the user.
        type: optional<list<string>>
      state:
        type: optional<UserState>

  UserBaseSummary:
    properties:
      display_name:
        docs: |
          The user's display name. The name is non-unique and mutable.
        type: optional<string>
      display_picture:
        type: optional<ArtifactSummary>
      email:
        docs: Email address of the user.
        type: optional<string>
      full_name:
        docs: Full name of the user.
        type: optional<string>
      state:
        type: optional<UserState>

  UserState:
    docs: State of the user.
    enum:
      - name: active
        value: active
      - name: deactivated
        value: deactivated
      - name: locked
        value: locked
      - name: shadow
        value: shadow
      - name: unassigned
        value: unassigned

  UserSummary:
    base-properties: {}
    union:
      dev_user:
        type: DevUserSummary
      rev_user:
        type: RevUserSummary
      sys_user:
        type: SysUserSummary

  UserType:
    enum:
      - name: dev_user
        value: dev_user
      - name: rev_user
        value: rev_user
      - name: sys_user
        value: sys_user

  Webhook:
    properties:
      event_types:
        docs: The event types that the webhook will receive.
        type: optional<list<WebhookEventType>>
      secret:
        docs: The secret to use for verifying webhook events.
        type: optional<string>
      status:
        type: optional<WebhookStatus>
      url:
        docs: The URL of the webhook endpoint.
        type: optional<string>

  WebhookEventRequest:
    properties:
      id:
        type: string
        docs: The event's ID.
      part_created:
        type: optional<EventPartCreated>
      part_deleted:
        type: optional<EventPartDeleted>
      part_updated:
        type: optional<EventPartUpdated>
      rev_org_created:
        type: optional<EventRevOrgCreated>
      rev_org_deleted:
        type: optional<EventRevOrgDeleted>
      rev_org_updated:
        type: optional<EventRevOrgUpdated>
      tag_created:
        type: optional<EventTagCreated>
      tag_deleted:
        type: optional<EventTagDeleted>
      tag_updated:
        type: optional<EventTagUpdated>
      timeline_entry_created:
        type: optional<EventTimelineEntryCreated>
      timeline_entry_deleted:
        type: optional<EventTimelineEntryDeleted>
      timeline_entry_updated:
        type: optional<EventTimelineEntryUpdated>
      timestamp:
        docs: |
          Timestamp of the webhook's invocation for the event. Note this
          should be used to protect against replay attacks, where the event
          should only be processed if the timestamp isn't stale by several
          seconds.
        type: optional<string>
      type:
        type: optional<WebhookEventType>
      verify:
        type: optional<WebhookEventVerify>
      webhook_created:
        type: optional<EventWebhookCreated>
      webhook_deleted:
        type: optional<EventWebhookDeleted>
      webhook_id:
        type: string
        docs: ID of the webhook for the event.
      webhook_updated:
        type: optional<EventWebhookUpdated>
      work_created:
        type: optional<EventWorkCreated>
      work_deleted:
        type: optional<EventWorkDeleted>
      work_updated:
        type: optional<EventWorkUpdated>

  WebhookEventResponse:
    properties:
      challenge:
        docs: |
          The challenge from the "verify" request, otherwise this should not
          be set for other request types.
        type: optional<string>

  WebhookEventType:
    docs: The event types that the webhook will receive.
    enum:
      - name: part_created
        value: part_created
      - name: part_deleted
        value: part_deleted
      - name: part_updated
        value: part_updated
      - name: rev_org_created
        value: rev_org_created
      - name: rev_org_deleted
        value: rev_org_deleted
      - name: rev_org_updated
        value: rev_org_updated
      - name: tag_created
        value: tag_created
      - name: tag_deleted
        value: tag_deleted
      - name: tag_updated
        value: tag_updated
      - name: timeline_entry_created
        value: timeline_entry_created
      - name: timeline_entry_deleted
        value: timeline_entry_deleted
      - name: timeline_entry_updated
        value: timeline_entry_updated
      - name: verify
        value: verify
      - name: webhook_created
        value: webhook_created
      - name: webhook_deleted
        value: webhook_deleted
      - name: webhook_updated
        value: webhook_updated
      - name: work_created
        value: work_created
      - name: work_deleted
        value: work_deleted
      - name: work_updated
        value: work_updated

  WebhookEventVerify:
    properties:
      challenge:
        type: string
        docs: The challenge that must be echoed in the response.

  WebhookStatus:
    docs: The status of the webhook.
    enum:
      - name: active
        value: active
      - name: inactive
        value: inactive
      - name: unverified
        value: unverified

  WebhooksCreateResponse:
    docs: The response to creating a new webhook.
    properties:
      webhook:
        type: Webhook

  webhooks-delete-response:
    docs: The response to deleting the webhook.
    type: map<string, unknown>

  WebhooksGetResponse:
    docs: The response to getting the information for the webhook.
    properties:
      webhook:
        type: Webhook

  WebhooksListResponse:
    docs: The response to listing the webhooks.
    properties:
      webhooks:
        docs: The list of webhooks.
        type: list<Webhook>

  WebhooksUpdateAction:
    docs: The action to update the webhook's status.
    enum:
      - name: activate
        value: activate
      - name: deactivate
        value: deactivate

  WebhooksUpdateRequestEventTypes:
    properties:
      add:
        docs: |
          The event types to add. If a provided event type is already set for
          the webhook, then nothing is done. Note this is mutually exclusive
          with 'set'.
        type: optional<list<WebhookEventType>>
      remove:
        docs: |
          The event types to remove. If a provided event type isn't set for
          the webhook, then nothing is done. Note this is mutually exclusive
          with 'set'.
        type: optional<list<WebhookEventType>>
      set:
        docs: |
          The updated event types, which will replace the webhook's current
          event types. Note this is mutually exclusive with 'add' and
          'remove'.
        type: optional<list<WebhookEventType>>

  WebhooksUpdateResponse:
    docs: The response to updating the webhook.
    properties:
      webhook:
        type: Webhook

  Work:
    base-properties: {}
    union:
      issue:
        type: Issue
      ticket:
        type: Ticket

  WorkBase:
    properties:
      applies_to_part:
        type: optional<PartSummary>
      artifacts:
        docs: The artifacts attached to the work item.
        type: optional<list<ArtifactSummary>>
      body:
        docs: Body of the work object.
        type: optional<string>
      owned_by:
        docs: The users that own the work.
        type: optional<list<UserSummary>>
      reported_by:
        docs: Users that reported the work.
        type: optional<list<UserSummary>>
      stage:
        type: optional<Stage>
      tags:
        docs: Tags associated with the object.
        type: optional<list<TagWithValue>>
      target_close_date:
        docs: Timestamp when the work is expected to be complete.
        type: optional<string>
      title:
        docs: Title of the work object.
        type: optional<string>

  WorkType:
    enum:
      - name: issue
        value: issue
      - name: ticket
        value: ticket

  WorksCreateRequestIssue:
    properties:
      priority:
        type: optional<IssuePriority>
      sprint:
        docs: The sprint that the issue belongs to.
        type: optional<string>

  WorksCreateRequestTicket:
    properties:
      group:
        docs: The group that the ticket is associated with.
        type: optional<string>
      rev_org:
        docs: The Rev organization that the ticket is associated with.
        type: optional<string>
      severity:
        type: optional<TicketSeverity>

  WorksCreateResponse:
    properties:
      work:
        type: Work

  works-delete-response:
    type: map<string, unknown>

  WorksExportResponse:
    properties:
      works:
        docs: The resulting collection of work items.
        type: list<Work>

  WorksGetResponse:
    properties:
      work:
        type: Work

  WorksListResponse:
    properties:
      next_cursor:
        docs: |
          The cursor used to iterate subsequent results in accordance to the
          sort order. If not set, then no later elements exist.
        type: optional<string>
      prev_cursor:
        docs: |
          The cursor used to iterate preceding results in accordance to the
          sort order. If not set, then no prior elements exist.
        type: optional<string>
      works:
        docs: The list of works.
        type: list<Work>

  WorksUpdateRequestArtifactIds:
    properties:
      set:
        docs: Sets the IDs to the provided artifact IDs.
        type: optional<list<string>>

  WorksUpdateRequestIssue:
    properties:
      priority:
        type: optional<IssuePriority>
      sprint:
        docs: Updates the sprint that the issue belongs to.
        type: optional<string>

  WorksUpdateRequestOwnedBy:
    properties:
      set:
        docs: |
          Sets the owner IDs to the provided user IDs. This must not be
          empty.
        type: optional<list<string>>

  WorksUpdateRequestReportedBy:
    properties:
      set:
        docs: |
          Sets the users that reported the work to the provided user IDs.
        type: optional<list<string>>

  WorksUpdateRequestTags:
    properties:
      set:
        docs: Sets the provided tags on the work item.
        type: optional<list<SetTagWithValue>>

  WorksUpdateRequestTicket:
    properties:
      group:
        docs: The group that the ticket is associated with.
        type: optional<string>
      rev_org:
        docs: |
          Updates the Rev organization that the ticket is associated with.
        type: optional<string>
      severity:
        type: optional<TicketSeverity>

  WorksUpdateResponse:
    properties:
      work:
        type: Work
